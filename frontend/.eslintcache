[{"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\index.js":"1","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\App.js":"3","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Chat.js":"4","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatPage.js":"5","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\chatMessageActions.js":"6","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\store.js":"7","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\types.js":"8","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\config\\axios.js":"9","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\chatMessageReducer.js":"10","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\socketReducer.js":"11"},{"size":637,"mtime":1612273559873,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":198,"mtime":1611244608632,"results":"15","hashOfConfig":"13"},{"size":2192,"mtime":1611241469942,"results":"16","hashOfConfig":"13"},{"size":3557,"mtime":1612451258453,"results":"17","hashOfConfig":"13"},{"size":1104,"mtime":1612534837229,"results":"18","hashOfConfig":"13"},{"size":671,"mtime":1612448722963,"results":"19","hashOfConfig":"13"},{"size":379,"mtime":1612446209101,"results":"20","hashOfConfig":"13"},{"size":133,"mtime":1612270197118,"results":"21","hashOfConfig":"13"},{"size":1431,"mtime":1612380509272,"results":"22","hashOfConfig":"13"},{"size":400,"mtime":1612534839503,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1r1jcwq",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\index.js",[],["51","52"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\App.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Chat.js",["53"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatPage.js",["54","55"],"import { useEffect, useState, useRef } from 'react';\r\n// import io from 'socket.io-client';\r\n// import moment from 'moment';\r\n\r\n// CSS\r\nimport '../css/Chat.scss';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\n\r\n// Redux Actions\r\nimport {\r\n  getAllChatMessages,\r\n  createChatMessage,\r\n  deleteChatMessage,\r\n} from '../redux/actions/chatMessageActions';\r\n\r\n// Emit to server types\r\nimport { CREATE_CHAT_MESSAGE, DELETE_CHAT_MESSAGE } from '../redux/types';\r\n\r\n// Receive from server types:\r\nimport { OUTPUT_CHAT_MESSAGE, DELETED_CHAT_MESSAGE } from '../redux/types';\r\n\r\n// Backend url\r\n// let server = 'http://localhost:1337';\r\n\r\n// Connect client to the backend with socket\r\n// const socket = io(server);\r\n\r\nconst ChatPage = props => {\r\n  // Props\r\n  console.log(props);\r\n\r\n  // Local State\r\n  const [chatMessage, setChatMessage] = useState('');\r\n\r\n  // ComponentDidMount: fetch all chats messages once\r\n  useEffect(() => {\r\n    props.getAllChatMessages();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Listen to incoming chatMessages from the backend\r\n    props.socket.on(OUTPUT_CHAT_MESSAGE, messageFromBackend => {\r\n      console.log(messageFromBackend);\r\n      // Dispatch messageFromBackend to the chatMessageReducer, to update the state/props to rerender\r\n      props.createChatMessage(messageFromBackend);\r\n    });\r\n\r\n    // Listen to incoming ID's from deleted chatMessages from the backend / db\r\n    props.socket.on(DELETED_CHAT_MESSAGE, messageIdFromBackEnd => {\r\n      // console.log(messageFromBackend);\r\n      props.deleteChatMessage(messageIdFromBackEnd);\r\n    });\r\n  }, []);\r\n\r\n  // Scroll to bottom on new chatMessage\r\n  const chatEnd = useRef(null);\r\n  useEffect(() => {\r\n    chatEnd.current.scrollIntoView({ behavior: 'smooth' });\r\n  });\r\n\r\n  //   Local funcions\r\n  const handleChange = e => {\r\n    setChatMessage(e.target.value);\r\n  };\r\n\r\n  const submitChatMessage = e => {\r\n    e.preventDefault();\r\n\r\n    // Mock user data from redux for example\r\n    let userId = '123';\r\n    let username = 'props.user.username';\r\n    // let timestamp = moment();\r\n    let sender = true;\r\n\r\n    // Emit the chatMessage to the backend\r\n    props.socket.emit(CREATE_CHAT_MESSAGE, {\r\n      // _id: Math.floor(Math.random() * 1000),\r\n      body: chatMessage,\r\n      username,\r\n      sender,\r\n      userId,\r\n    });\r\n\r\n    setChatMessage('');\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <div className='chat'>\r\n      <h1>Chat</h1>\r\n      <div>\r\n        {/* map through redux state, and output chatMessages on the page */}\r\n        {props.data.chatMessages?.map(message => {\r\n          return (\r\n            <div key={message._id}>\r\n              <button\r\n                onClick={() => {\r\n                  props.socket.emit(DELETE_CHAT_MESSAGE, message._id);\r\n                }}>\r\n                X\r\n              </button>\r\n              <p>{message.body}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <form onSubmit={submitChatMessage}>\r\n        <input\r\n          value={chatMessage}\r\n          onChange={handleChange}\r\n          type='text'\r\n          autoFocus={true}\r\n          placeholder='send a message...'\r\n        />\r\n        <button style={{ display: 'none' }} type='submit'>\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <div ref={chatEnd} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    socket: state.socket.socket,\r\n    data: state.data,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllChatMessages,\r\n  createChatMessage,\r\n  deleteChatMessage,\r\n})(ChatPage);\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\chatMessageActions.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\store.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\types.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\config\\axios.js",[],["56","57"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\chatMessageReducer.js",["58"],"import { GET_ALL_CHAT_MESSAGES, CREATE_CHAT_MESSAGE, DELETE_CHAT_MESSAGE } from '../types';\r\n\r\nconst initialState = {\r\n  //   payload: {},\r\n  chatMessages: [],\r\n  chatMessage: {},\r\n  loading: false,\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_CHAT_MESSAGES:\r\n      //   console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        chatMessages: action.payload,\r\n      };\r\n\r\n    case CREATE_CHAT_MESSAGE:\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        chatMessages: [...state.chatMessages, action.payload],\r\n      };\r\n    case DELETE_CHAT_MESSAGE: {\r\n      // console.log('reducer', action.payload); // payload here ==- screamId\r\n      // let filteredScreams = state.screams.filter(scream => scream.screamId !== action.payload);\r\n      // return {\r\n      //   ...state,\r\n      //   screams: filteredScreams,\r\n      // };\r\n\r\n      // findIndex stops when the index is found, filter does not. findindex should be faster here\r\n\r\n      let index = state.chatMessages.findIndex(message => message._id === action.payload);\r\n      let filteredChatMessages = [...state.chatMessages];\r\n      filteredChatMessages.splice(index, 1);\r\n\r\n      console.log(filteredChatMessages);\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        chatMessages: filteredChatMessages,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\socketReducer.js",["59"],"import io from 'socket.io-client';\r\nlet server = 'http://localhost:1337';\r\nconst socket = io(server);\r\n\r\nconst initialState = {\r\n  socket: socket,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'EMIT_CHAT_MESSAGE':\r\n      //   console.log(action.payload);\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":7,"column":11,"nodeType":"66","messageId":"67","endLine":7,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":40,"column":6,"nodeType":"70","endLine":40,"endColumn":8,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"69","line":55,"column":6,"nodeType":"70","endLine":55,"endColumn":8,"suggestions":"72"},{"ruleId":"60","replacedBy":"73"},{"ruleId":"62","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":9,"column":1,"nodeType":"77","endLine":48,"endColumn":2},{"ruleId":"75","severity":1,"message":"76","line":9,"column":1,"nodeType":"77","endLine":20,"endColumn":2},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["80"],["81"],["78"],["79"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"82","fix":"84"},"Update the dependencies array to be: [props]",{"range":"85","text":"86"},{"range":"87","text":"86"},[969,971],"[props]",[1587,1589]]