[{"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\index.js":"1","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\App.js":"3","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatPage.js":"4","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\chatMessageActions.js":"5","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\store.js":"6","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\types.js":"7","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\config\\axios.js":"8","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\chatMessageReducer.js":"9","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\socketReducer.js":"10","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Login.js":"11","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\userReducer.js":"12","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\userActions.js":"13","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\AuthRoute.js":"14","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\Spinner.js":"15","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\authActions.js":"16","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Chat.js":"17","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatFriendsList.js":"18","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatMessageArea.js":"19","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\BigChat.js":"20","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Truncate.js":"21","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\ToggleTheme.js":"22","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Mui.js":"23","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\themeReducer.js":"24","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\helperFunctions.js":"25","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatInput.js":"26","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatUserData.js":"27","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatHeader.js":"28","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\darkTheme.js":"29","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\lightTheme.js":"30"},{"size":637,"mtime":1613245639965,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1658,"mtime":1615455405790,"results":"34","hashOfConfig":"32"},{"size":4105,"mtime":1614759726143,"results":"35","hashOfConfig":"32"},{"size":3814,"mtime":1615453539414,"results":"36","hashOfConfig":"32"},{"size":794,"mtime":1615453539419,"results":"37","hashOfConfig":"32"},{"size":1692,"mtime":1615453539420,"results":"38","hashOfConfig":"32"},{"size":207,"mtime":1614944673940,"results":"39","hashOfConfig":"32"},{"size":5080,"mtime":1615453539415,"results":"40","hashOfConfig":"32"},{"size":413,"mtime":1614944673940,"results":"41","hashOfConfig":"32"},{"size":4319,"mtime":1614759726157,"results":"42","hashOfConfig":"32"},{"size":2378,"mtime":1615453539418,"results":"43","hashOfConfig":"32"},{"size":1087,"mtime":1614944673937,"results":"44","hashOfConfig":"32"},{"size":2924,"mtime":1615457213497,"results":"45","hashOfConfig":"32"},{"size":158,"mtime":1613641508407,"results":"46","hashOfConfig":"32"},{"size":701,"mtime":1614944673940,"results":"47","hashOfConfig":"32"},{"size":2530,"mtime":1615453539391,"results":"48","hashOfConfig":"32"},{"size":12326,"mtime":1615458354908,"results":"49","hashOfConfig":"32"},{"size":7831,"mtime":1615458624257,"results":"50","hashOfConfig":"32"},{"size":8807,"mtime":1615122441440,"results":"51","hashOfConfig":"32"},{"size":1755,"mtime":1615453539411,"results":"52","hashOfConfig":"32"},{"size":1344,"mtime":1615453636527,"results":"53","hashOfConfig":"32"},{"size":1925,"mtime":1615456868099,"results":"54","hashOfConfig":"32"},{"size":446,"mtime":1615453539415,"results":"55","hashOfConfig":"32"},{"size":100,"mtime":1615453539430,"results":"56","hashOfConfig":"32"},{"size":1685,"mtime":1615453539394,"results":"57","hashOfConfig":"32"},{"size":1565,"mtime":1615453539409,"results":"58","hashOfConfig":"32"},{"size":2046,"mtime":1615453539394,"results":"59","hashOfConfig":"32"},{"size":269,"mtime":1615453539420,"results":"60","hashOfConfig":"32"},{"size":270,"mtime":1615453539430,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1r1jcwq",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\index.js",[],["130","131"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\App.js",["132","133"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatPage.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\chatMessageActions.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\store.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\types.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\config\\axios.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\chatMessageReducer.js",["134","135"],"import {\r\n  GET_ALL_CHAT_MESSAGES,\r\n  CREATE_CHAT_MESSAGE,\r\n  SET_LAST_CHAT_MESSAGE,\r\n  DELETE_CHAT_MESSAGE,\r\n  SET_ACTIVE_CHATROOM,\r\n  SET_USER_CHATROOMS,\r\n  CREATE_CHAT_ROOM,\r\n  TOGGLE_CHAT,\r\n  TOGGLE_CONTACTS,\r\n  SET_NO_ACTIVE_CHATROOM,\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  chatMessages: [],\r\n  chatRooms: [],\r\n  lastMessages: [],\r\n  activeChatRoom: [],\r\n  toggleFriendList: 'contacts',\r\n  // loading: true,\r\n};\r\nexport default function chatMessageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ALL_CHAT_MESSAGES:\r\n      return {\r\n        ...state,\r\n        chatMessages: action.payload,\r\n      };\r\n\r\n    case CREATE_CHAT_MESSAGE:\r\n      // room.chatMessages[0]?.body\r\n\r\n      // TODO: CODE HIERONDER RENDERT DE STATE NIET\r\n      // MISSCHIEN DOOR DE LASTMESSAGES MAPPEN, EN WAAR ACTION.PAYLOAD._ID HETZELFDE IS AL LASTMESSAGE ID VERVANGEN\r\n      // let newLastMessages = [...state.lastMessages];\r\n\r\n      // newLastMessages.map((message, i) => {\r\n      //   if (message.chatRoomId === action.payload.chatRoomId) {\r\n      //     return (newLastMessages[i] = { ...action.payload });\r\n      //   }\r\n      // });\r\n      // console.log(newLastMessages);\r\n\r\n      // console.log(lastMessage);\r\n      // state.chatRooms.map(room => {\r\n      //   if (room._id === action.payload.chatRoomId) {\r\n      //     console.log(room);\r\n      //     return (room.chatMessages[0].body = action.payload.body);\r\n      //   }\r\n      // });\r\n\r\n      return {\r\n        ...state,\r\n        // lastMessages: newLastMessages,\r\n        chatMessages:\r\n          state.chatMessages.length > 10\r\n            ? [...state.chatMessages, action.payload].slice(1) // keep the max size of chatMessages at 10\r\n            : [...state.chatMessages, action.payload],\r\n      };\r\n\r\n    case SET_LAST_CHAT_MESSAGE: {\r\n      // only return lastMessages where the message is not undefined\r\n      let newLastMessages = [...state.lastMessages].filter(message => message && message);\r\n      // console.log(newLastMessages);\r\n\r\n      // Resort the friendslist on last created message\r\n      newLastMessages.map((message, i) => {\r\n        if (message.chatRoomId === action.payload.chatRoomId) {\r\n          return (newLastMessages[i] = { ...action.payload });\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        lastMessages: newLastMessages,\r\n      };\r\n    }\r\n    case DELETE_CHAT_MESSAGE: {\r\n      // console.log('reducer', action.payload); // payload here ==- screamId\r\n      // let filteredScreams = state.screams.filter(scream => scream.screamId !== action.payload);\r\n      // return {\r\n      //   ...state,\r\n      //   screams: filteredScreams,\r\n      // };\r\n\r\n      // findIndex stops when the index is found, filter does not. findindex should be faster here\r\n\r\n      let index = state.chatMessages.findIndex(message => message._id === action.payload);\r\n      let filteredChatMessages = [...state.chatMessages];\r\n      filteredChatMessages.splice(index, 1);\r\n\r\n      console.log(filteredChatMessages);\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        chatMessages: filteredChatMessages,\r\n      };\r\n    }\r\n    case SET_USER_CHATROOMS: // Only chatRooms that have messages are rendered\r\n      let lastMessages = action.payload.map(room => room.chatMessages[0]);\r\n      // console.log(action.payload);\r\n\r\n      let sortedChatRooms = [...action.payload];\r\n\r\n      // only return the chatrooms where there are chatmessages // not sure if this works correctly\r\n      sortedChatRooms = sortedChatRooms.filter(room => room.chatMessages.length > 0 && room);\r\n\r\n      console.log(sortedChatRooms);\r\n\r\n      sortedChatRooms.sort((a, b) => {\r\n        if (a.chatMessages[0] && b.chatMessages[0]) {\r\n          return new Date(b.chatMessages[0].createdAt) - new Date(a.chatMessages[0].createdAt);\r\n        } else {\r\n          console.log('NO CHATMESSAGES TO SORT');\r\n          return;\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        // loading: false,\r\n        lastMessages: lastMessages,\r\n        // chatRooms: action.payload,\r\n        chatRooms: sortedChatRooms, // initial sort on page load/refresh. rerender sorting happens in SET_LAST_CHAT_MESSAGE\r\n      };\r\n    case SET_ACTIVE_CHATROOM:\r\n      console.log(action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        activeChatRoom: action.payload,\r\n        chatMessages: action.payload.chatMessages.reverse(),\r\n      };\r\n    case CREATE_CHAT_ROOM: {\r\n      const newChatRooms = [...state.chatRooms];\r\n      console.log(newChatRooms);\r\n      console.log(action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        chatRooms: [...newChatRooms, action.payload],\r\n      };\r\n    }\r\n    case SET_NO_ACTIVE_CHATROOM: {\r\n      return {\r\n        ...state,\r\n        activeChatRoom: [],\r\n      };\r\n    }\r\n    case TOGGLE_CHAT: {\r\n      return {\r\n        ...state,\r\n        toggleFriendList: 'chats',\r\n      };\r\n    }\r\n    case TOGGLE_CONTACTS: {\r\n      return {\r\n        ...state,\r\n        toggleFriendList: 'contacts',\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\socketReducer.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Login.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\userReducer.js",["136"],"import {\r\n  SET_ERRORS,\r\n  LOGIN_USER,\r\n  SET_CURRENT_USER,\r\n  GET_ALL_USERS,\r\n  UPDATE_CONNECTED_USERLIST,\r\n} from '../types';\r\n\r\nconst initialState = {\r\n  connectedUsers: {},\r\n  users: [],\r\n  user: {},\r\n  loading: true,\r\n  errors: [],\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload.user,\r\n      };\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload.currentUser,\r\n      };\r\n    case GET_ALL_USERS:\r\n      let allUsers = [...action.payload];\r\n\r\n      let sortedAllUsers = allUsers.sort(function (a, b) {\r\n        var textA = a.username.toUpperCase();\r\n        var textB = b.username.toUpperCase();\r\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        users: sortedAllUsers,\r\n      };\r\n    case UPDATE_CONNECTED_USERLIST:\r\n      // userlist from backend\r\n      const onlineUsers = { ...action.payload };\r\n      console.log(onlineUsers);\r\n\r\n      const sortedByOnlineUsers = [...state.users];\r\n\r\n      // Display online users on top in the contacts friendlist\r\n      sortedByOnlineUsers.map(user => {\r\n        if (Object.values(onlineUsers).includes(user._id)) {\r\n          console.log(user);\r\n          user.online = true;\r\n        } else {\r\n          user.online = false;\r\n        }\r\n\r\n        sortedByOnlineUsers.sort((a, b) => {\r\n          return b.online - a.online;\r\n        });\r\n      });\r\n\r\n      // Sorting contacts in the friendlist: Online users on top, then alphabetically. no good yet...\r\n      sortedByOnlineUsers.sort((a, b) => {\r\n        if (b.online > a.online) {\r\n          return 1;\r\n        }\r\n        if (a.username.toLowerCase() < b.username.toLowerCase()) {\r\n          return -1;\r\n        }\r\n        if (a.username.toLowerCase() > b.username.toLowerCase()) {\r\n          return 0;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      console.log(sortedByOnlineUsers);\r\n\r\n      return {\r\n        ...state,\r\n        users: sortedByOnlineUsers,\r\n        connectedUsers: action.payload,\r\n      };\r\n    case SET_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\AuthRoute.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\Spinner.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Chat.js",["137"],"// Redux\r\nimport { connect } from 'react-redux';\r\n\r\n// Components\r\nimport ChatFriendsList from './ChatFriendsList';\r\n\r\n// Helper functions\r\nimport { firstCharUpperCase } from '../util/helperFunctions';\r\n\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport ChatMessageArea from './ChatMessageArea';\r\nimport ChatHeader from './ChatHeader';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    // minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    // height: '80vh',\r\n  },\r\n  headBG: {\r\n    backgroundColor: '#e0e0e0',\r\n  },\r\n  borderRight500: {\r\n    borderRight: '1px solid #e0e0e0',\r\n  },\r\n  messageArea: {\r\n    height: '60vh',\r\n    overflowY: 'auto',\r\n  },\r\n});\r\n\r\nconst Chat = props => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container></Grid>\r\n      <Grid container component={Paper} className={classes.chatSection}>\r\n        <Grid item xs={3} className={classes.borderRight500}>\r\n          <List>\r\n            <ListItem button key={props.user._id}>\r\n              <ListItemIcon>\r\n                <Avatar alt={props.user.username.toUpperCase()} src={props.user.avatar} />\r\n              </ListItemIcon>\r\n              <ListItemText primary={firstCharUpperCase(props.user.username)}></ListItemText>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <Grid item xs={12} style={{ padding: '10px' }}>\r\n            <TextField id='outlined-basic-email' label='Search' variant='outlined' fullWidth />\r\n          </Grid>\r\n          <Divider />\r\n\r\n          {/* Friend list */}\r\n          <ChatFriendsList />\r\n\r\n          {/*  */}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          {/* Header */}\r\n          <ChatHeader />\r\n\r\n          {/* Chat Message Area */}\r\n          <ChatMessageArea classes={classes} />\r\n\r\n          {/*  */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Chat);\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatFriendsList.js",["138","139","140","141","142","143","144","145"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatMessageArea.js",["146","147","148","149","150","151","152","153"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\BigChat.js",["154","155","156"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Truncate.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\ToggleTheme.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Mui.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\themeReducer.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\helperFunctions.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatInput.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatUserData.js",["157","158","159","160","161","162","163","164"],"import { connect } from 'react-redux';\r\nimport { firstCharUpperCase } from '../util/helperFunctions';\r\n\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: 20,\r\n    paddingLeft: 20,\r\n    paddingBottom: 20,\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  text: {\r\n    color: '#fff',\r\n    marginLeft: 20,\r\n  },\r\n}));\r\n\r\nconst ChatUserData = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div key={props.user._id} className={classes.container}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          alt={props.user.username.toUpperCase()}\r\n          src={props.user.avatar}\r\n        />\r\n        <Typography className={classes.text}>{firstCharUpperCase(props.user.username)}</Typography>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChatUserData);\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatHeader.js",["165","166","167","168"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\n\r\n// Helper Functions\r\nimport { firstCharUpperCase } from '../util/helperFunctions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: 20,\r\n    paddingLeft: 20,\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  members: {\r\n    fontWeight: 'bold',\r\n    marginLeft: 20,\r\n    marginRight: 10,\r\n  },\r\n  text: {\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst ChatHeader = props => {\r\n  const classes = useStyles();\r\n\r\n  const { user, activeChatRoom } = props;\r\n\r\n  const contact = activeChatRoom.members?.filter(member =>\r\n    user._id !== member._id ? member : null,\r\n  );\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {contact && (\r\n        <>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            alt={contact && contact[0]?.username.toUpperCase()}\r\n            src={contact && contact[0]?.avatar}\r\n          />\r\n          <Typography variant='caption' className={classes.text}>\r\n            <Typography variant='caption' className={classes.members}>\r\n              Members:\r\n            </Typography>\r\n            {activeChatRoom.members.map(\r\n              member =>\r\n                `${firstCharUpperCase(member.username)} ${\r\n                  member !== activeChatRoom.members[activeChatRoom.members.length - 1] ? '&' : ''\r\n                } `,\r\n            )}\r\n          </Typography>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: state.user.user,\r\n    activeChatRoom: state.chat.activeChatRoom,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChatHeader);\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\darkTheme.js",["169"],"import teal from '@material-ui/core/colors/teal';\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\nexport default {\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: teal[700],\r\n    },\r\n    secondary: {\r\n      main: purple[500],\r\n    },\r\n  },\r\n};\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\lightTheme.js",["170"],"import teal from '@material-ui/core/colors/teal';\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\nexport default {\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: teal[700],\r\n    },\r\n    secondary: {\r\n      main: purple[500],\r\n    },\r\n  },\r\n};\r\n",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":15,"column":8,"nodeType":"177","messageId":"178","endLine":15,"endColumn":16},{"ruleId":"175","severity":1,"message":"179","line":17,"column":8,"nodeType":"177","messageId":"178","endLine":17,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":67,"column":40,"nodeType":"182","messageId":"183","endLine":67,"endColumn":42},{"ruleId":"180","severity":1,"message":"184","line":115,"column":11,"nodeType":"185","messageId":"186","endLine":115,"endColumn":18},{"ruleId":"180","severity":1,"message":"187","line":52,"column":36,"nodeType":"182","messageId":"188","endLine":52,"endColumn":38},{"ruleId":"175","severity":1,"message":"189","line":16,"column":8,"nodeType":"177","messageId":"178","endLine":16,"endColumn":18},{"ruleId":"175","severity":1,"message":"190","line":18,"column":8,"nodeType":"177","messageId":"178","endLine":18,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":68,"column":6,"nodeType":"193","endLine":68,"endColumn":8,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"187","line":75,"column":30,"nodeType":"182","messageId":"188","endLine":75,"endColumn":32},{"ruleId":"180","severity":1,"message":"187","line":76,"column":31,"nodeType":"182","messageId":"188","endLine":76,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":149,"column":39,"nodeType":"182","messageId":"183","endLine":149,"endColumn":41},{"ruleId":"180","severity":1,"message":"181","line":177,"column":71,"nodeType":"182","messageId":"183","endLine":177,"endColumn":73},{"ruleId":"180","severity":1,"message":"181","line":204,"column":71,"nodeType":"182","messageId":"183","endLine":204,"endColumn":73},{"ruleId":"180","severity":1,"message":"181","line":220,"column":32,"nodeType":"182","messageId":"183","endLine":220,"endColumn":34},{"ruleId":"175","severity":1,"message":"195","line":33,"column":8,"nodeType":"177","messageId":"178","endLine":33,"endColumn":17},{"ruleId":"175","severity":1,"message":"196","line":34,"column":8,"nodeType":"177","messageId":"178","endLine":34,"endColumn":11},{"ruleId":"175","severity":1,"message":"197","line":35,"column":8,"nodeType":"177","messageId":"178","endLine":35,"endColumn":16},{"ruleId":"180","severity":1,"message":"187","line":74,"column":51,"nodeType":"182","messageId":"188","endLine":74,"endColumn":53},{"ruleId":"180","severity":1,"message":"187","line":117,"column":42,"nodeType":"182","messageId":"188","endLine":117,"endColumn":44},{"ruleId":"191","severity":1,"message":"198","line":125,"column":6,"nodeType":"193","endLine":131,"endColumn":4,"suggestions":"199"},{"ruleId":"175","severity":1,"message":"200","line":140,"column":9,"nodeType":"177","messageId":"178","endLine":140,"endColumn":21},{"ruleId":"175","severity":1,"message":"201","line":144,"column":9,"nodeType":"177","messageId":"178","endLine":144,"endColumn":26},{"ruleId":"175","severity":1,"message":"202","line":21,"column":8,"nodeType":"177","messageId":"178","endLine":21,"endColumn":23},{"ruleId":"191","severity":1,"message":"203","line":99,"column":6,"nodeType":"193","endLine":104,"endColumn":4,"suggestions":"204"},{"ruleId":"180","severity":1,"message":"181","line":158,"column":48,"nodeType":"182","messageId":"183","endLine":158,"endColumn":50},{"ruleId":"175","severity":1,"message":"205","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":13},{"ruleId":"175","severity":1,"message":"206","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":12},{"ruleId":"175","severity":1,"message":"207","line":8,"column":8,"nodeType":"177","messageId":"178","endLine":8,"endColumn":15},{"ruleId":"175","severity":1,"message":"195","line":9,"column":8,"nodeType":"177","messageId":"178","endLine":9,"endColumn":17},{"ruleId":"175","severity":1,"message":"208","line":11,"column":8,"nodeType":"177","messageId":"178","endLine":11,"endColumn":12},{"ruleId":"175","severity":1,"message":"209","line":12,"column":8,"nodeType":"177","messageId":"178","endLine":12,"endColumn":16},{"ruleId":"175","severity":1,"message":"210","line":13,"column":8,"nodeType":"177","messageId":"178","endLine":13,"endColumn":20},{"ruleId":"175","severity":1,"message":"211","line":14,"column":8,"nodeType":"177","messageId":"178","endLine":14,"endColumn":20},{"ruleId":"175","severity":1,"message":"212","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"213","line":3,"column":8,"nodeType":"177","messageId":"178","endLine":3,"endColumn":15},{"ruleId":"175","severity":1,"message":"206","line":4,"column":8,"nodeType":"177","messageId":"178","endLine":4,"endColumn":12},{"ruleId":"175","severity":1,"message":"207","line":7,"column":8,"nodeType":"177","messageId":"178","endLine":7,"endColumn":15},{"ruleId":"214","severity":1,"message":"215","line":4,"column":1,"nodeType":"216","endLine":14,"endColumn":3},{"ruleId":"214","severity":1,"message":"215","line":4,"column":1,"nodeType":"216","endLine":14,"endColumn":3},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'ChatPage' is defined but never used.","Identifier","unusedVar","'Truncate' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.sort() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Typography' is defined but never used.","'theme' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["219"],"'TextField' is defined but never used.","'Fab' is defined but never used.","'SendIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getAllUserChatRooms', 'props.activeChatRoom._id', and 'user._id'. Either include them or remove the dependency array.",["220"],"'handleChange' is assigned a value but never used.","'submitChatMessage' is assigned a value but never used.","'ChatFriendsList' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["221"],"'Paper' is defined but never used.","'Grid' is defined but never used.","'Divider' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [props]",{"range":"228","text":"229"},"Update the dependencies array to be: [socket, activeChatRoom, emitCreateChatMessageFromServerToAllClients, emitLastChatMessage, emitDeleteChatMessageFromServerToAllClients, getAllUserChatRooms, user._id, dispatch, props.activeChatRoom._id]",{"range":"230","text":"231"},"Update the dependencies array to be: [props.activeChatRoom, socket, emitCreateChatMessageFromServerToAllClients, emitDeleteChatMessageFromServerToAllClients, props]",{"range":"232","text":"233"},[2480,2482],"[props]",[4476,4642],"[socket, activeChatRoom, emitCreateChatMessageFromServerToAllClients, emitLastChatMessage, emitDeleteChatMessageFromServerToAllClients, getAllUserChatRooms, user._id, dispatch, props.activeChatRoom._id]",[2962,3108],"[props.activeChatRoom, socket, emitCreateChatMessageFromServerToAllClients, emitDeleteChatMessageFromServerToAllClients, props]"]