[{"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\index.js":"1","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\App.js":"3","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatPage.js":"4","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\chatMessageActions.js":"5","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\store.js":"6","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\types.js":"7","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\config\\axios.js":"8","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\chatMessageReducer.js":"9","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\socketReducer.js":"10","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Login.js":"11","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\userReducer.js":"12","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\userActions.js":"13","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\AuthRoute.js":"14","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\Spinner.js":"15","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\authActions.js":"16","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Chat.js":"17","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatFriendsList.js":"18","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatMessageArea.js":"19"},{"size":637,"mtime":1613245639965,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":733,"mtime":1613922521059,"results":"23","hashOfConfig":"21"},{"size":3875,"mtime":1613745171728,"results":"24","hashOfConfig":"21"},{"size":2084,"mtime":1613660403370,"results":"25","hashOfConfig":"21"},{"size":747,"mtime":1614001239462,"results":"26","hashOfConfig":"21"},{"size":906,"mtime":1614001952030,"results":"27","hashOfConfig":"21"},{"size":207,"mtime":1613462400030,"results":"28","hashOfConfig":"21"},{"size":1449,"mtime":1613503428548,"results":"29","hashOfConfig":"21"},{"size":413,"mtime":1613674734759,"results":"30","hashOfConfig":"21"},{"size":4316,"mtime":1613578011613,"results":"31","hashOfConfig":"21"},{"size":855,"mtime":1614000848751,"results":"32","hashOfConfig":"21"},{"size":811,"mtime":1613999009598,"results":"33","hashOfConfig":"21"},{"size":2506,"mtime":1614002039506,"results":"34","hashOfConfig":"21"},{"size":158,"mtime":1613641508407,"results":"35","hashOfConfig":"21"},{"size":701,"mtime":1613647450576,"results":"36","hashOfConfig":"21"},{"size":3191,"mtime":1613728079942,"results":"37","hashOfConfig":"21"},{"size":1291,"mtime":1614001042974,"results":"38","hashOfConfig":"21"},{"size":5564,"mtime":1613999523146,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1r1jcwq",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\index.js",[],["82","83"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\App.js",["84"],"import './css/App.css';\n\n// React Router DOM\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Components\nimport Login from './Components/Login';\nimport ChatPage from './Components/ChatPage';\nimport Chat from './Components/Chat';\n\nimport AuthRoute from './util/AuthRoute';\nimport Spinner from './util/Spinner';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='app'>\n        <Switch>\n          <AuthRoute exact path='/' component={Chat} />\n          <AuthRoute exact path='/chat' component={Chat} />\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/spin' component={Spinner} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatPage.js",["85","86"],"import { useEffect, useState, useRef } from 'react';\r\n\r\n// CSS\r\nimport '../css/Chat.scss';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\n\r\n// Redux Actions\r\nimport {\r\n  getAllChatMessages,\r\n  createChatMessage,\r\n  deleteChatMessage,\r\n  emitCreateChatMessageFromServerToAllClients,\r\n  emitDeleteChatMessageFromServerToAllClients,\r\n} from '../redux/actions/chatMessageActions';\r\n\r\n// Receive from server types:\r\nimport { OUTPUT_CHAT_MESSAGE, DELETED_CHAT_MESSAGE } from '../redux/types';\r\n\r\nconst ChatPage = props => {\r\n  // Props\r\n  // console.log(props);\r\n\r\n  // Local State\r\n  const [chatMessage, setChatMessage] = useState('');\r\n\r\n  // ComponentDidMount: fetch all chats messages once\r\n  useEffect(() => {\r\n    props.getAllChatMessages();\r\n  }, []);\r\n\r\n  // PRIVATE MESSAGE\r\n  useEffect(() => {\r\n    // props.socket.on('private message', privateMessageFromBackend => {\r\n    //   console.log('PRIVATEMESSAGEEEE!!!');\r\n    // });\r\n\r\n    // Listen to incoming chatMessages from the backend\r\n    props.socket.on(OUTPUT_CHAT_MESSAGE, messageFromBackend => {\r\n      // Dispatch messageFromBackend to the chatMessageReducer, to update the state/props to rerender\r\n      // props.createChatMessage(messageFromBackend);\r\n      console.log('message from backend:');\r\n      console.log(messageFromBackend);\r\n\r\n      // Dispatch from here, so that the redux state is updated for all clients.\r\n      props.emitCreateChatMessageFromServerToAllClients(messageFromBackend);\r\n    });\r\n\r\n    // Listen to incoming ID's from deleted chatMessages from the backend / db\r\n    props.socket.on(DELETED_CHAT_MESSAGE, messageIdFromBackEnd => {\r\n      props.emitDeleteChatMessageFromServerToAllClients(messageIdFromBackEnd);\r\n    });\r\n  }, []);\r\n\r\n  // Scroll to bottom on new chatMessage\r\n  const chatEnd = useRef(null);\r\n  useEffect(() => {\r\n    chatEnd.current.scrollIntoView({ behavior: 'smooth' });\r\n  });\r\n\r\n  //   Local funcions\r\n  const handleChange = e => {\r\n    setChatMessage(e.target.value);\r\n  };\r\n\r\n  const submitChatMessage = e => {\r\n    e.preventDefault();\r\n\r\n    // PRIVATE MESSSAGE\r\n    props.socket.emit('private message', 'V5cb8K9FGA8P6haCAAAb', {\r\n      body: chatMessage,\r\n    });\r\n\r\n    // Create chat message action\r\n    props.createChatMessage({\r\n      body: chatMessage,\r\n    });\r\n\r\n    setChatMessage('');\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <div className='chat'>\r\n      <h1>Chat</h1>\r\n      <div>\r\n        {/* map through redux state, and output chatMessages on the page */}\r\n        {props.data.chatMessages?.map(message => {\r\n          return (\r\n            <div\r\n              key={message._id}\r\n              style={\r\n                message.userId === props.user.user._id ? { color: 'green' } : { color: 'red' }\r\n              }>\r\n              <button\r\n                onClick={() => {\r\n                  props.deleteChatMessage(message._id);\r\n                }}>\r\n                X\r\n              </button>\r\n              <p>\r\n                <strong>{message.username}</strong>\r\n              </p>\r\n              <p>{message.body}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <form onSubmit={submitChatMessage}>\r\n        <input\r\n          value={chatMessage}\r\n          onChange={handleChange}\r\n          type='text'\r\n          autoFocus={true}\r\n          placeholder='send a message...'\r\n        />\r\n        <button style={{ display: 'none' }} type='submit'>\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <div ref={chatEnd} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    socket: state.socket.socket,\r\n    data: state.data,\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllChatMessages,\r\n  createChatMessage,\r\n  deleteChatMessage,\r\n  emitCreateChatMessageFromServerToAllClients,\r\n  emitDeleteChatMessageFromServerToAllClients,\r\n})(ChatPage);\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\chatMessageActions.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\store.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\types.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\config\\axios.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\chatMessageReducer.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\socketReducer.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Login.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\userActions.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\AuthRoute.js",["87","88"],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\util\\Spinner.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\Chat.js",["89","90","91","92"],"// Redux\r\nimport { connect } from 'react-redux';\r\n\r\n// Redux Actions\r\nimport {\r\n  getAllChatMessages,\r\n  createChatMessage,\r\n  deleteChatMessage,\r\n  emitCreateChatMessageFromServerToAllClients,\r\n  emitDeleteChatMessageFromServerToAllClients,\r\n} from '../redux/actions/chatMessageActions';\r\n\r\n// Components\r\nimport ChatFriendsList from './ChatFriendsList';\r\n\r\n// Receive from server types:\r\nimport { OUTPUT_CHAT_MESSAGE, DELETED_CHAT_MESSAGE } from '../redux/types';\r\n\r\n// MUI\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nimport noImg from '../images/no-img.png';\r\nimport ChatMessageArea from './ChatMessageArea';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    height: '80vh',\r\n  },\r\n  headBG: {\r\n    backgroundColor: '#e0e0e0',\r\n  },\r\n  borderRight500: {\r\n    borderRight: '1px solid #e0e0e0',\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'auto',\r\n  },\r\n});\r\n\r\nconst Chat = props => {\r\n  console.log(props.user.username);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Typography variant='h5' className='header-message'>\r\n            DNK\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container component={Paper} className={classes.chatSection}>\r\n        <Grid item xs={3} className={classes.borderRight500}>\r\n          <List>\r\n            <ListItem button key='RemySharp'>\r\n              <ListItemIcon>\r\n                <Avatar alt='Remy Sharp' src={noImg} />\r\n              </ListItemIcon>\r\n              <ListItemText primary={props.user.username}></ListItemText>\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <Grid item xs={12} style={{ padding: '10px' }}>\r\n            <TextField id='outlined-basic-email' label='Search' variant='outlined' fullWidth />\r\n          </Grid>\r\n          <Divider />\r\n\r\n          {/* Friend list */}\r\n          <ChatFriendsList />\r\n\r\n          {/*  */}\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          {/* Chat Message Area */}\r\n          <ChatMessageArea classes={classes} />\r\n\r\n          {/*  */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    socket: state.socket.socket,\r\n    data: state.data,\r\n    user: state.user.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAllChatMessages,\r\n  createChatMessage,\r\n  deleteChatMessage,\r\n  emitCreateChatMessageFromServerToAllClients,\r\n  emitDeleteChatMessageFromServerToAllClients,\r\n})(Chat);\r\n","C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatFriendsList.js",[],"C:\\Users\\gebruiker\\React\\mern\\frontend\\src\\Components\\ChatMessageArea.js",["93","94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":31,"column":6,"nodeType":"106","endLine":31,"endColumn":8,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"105","line":54,"column":6,"nodeType":"106","endLine":54,"endColumn":8,"suggestions":"108"},{"ruleId":"104","severity":1,"message":"105","line":30,"column":6,"nodeType":"106","endLine":30,"endColumn":8,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"105","line":53,"column":6,"nodeType":"106","endLine":53,"endColumn":22,"suggestions":"110"},{"ruleId":"100","severity":1,"message":"111","line":17,"column":10,"nodeType":"102","messageId":"103","endLine":17,"endColumn":29},{"ruleId":"100","severity":1,"message":"112","line":17,"column":31,"nodeType":"102","messageId":"103","endLine":17,"endColumn":51},{"ruleId":"100","severity":1,"message":"113","line":31,"column":8,"nodeType":"102","messageId":"103","endLine":31,"endColumn":11},{"ruleId":"100","severity":1,"message":"114","line":32,"column":8,"nodeType":"102","messageId":"103","endLine":32,"endColumn":16},{"ruleId":"100","severity":1,"message":"115","line":57,"column":11,"nodeType":"102","messageId":"103","endLine":57,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":65,"column":6,"nodeType":"106","endLine":65,"endColumn":8,"suggestions":"116"},{"ruleId":"104","severity":1,"message":"105","line":84,"column":6,"nodeType":"106","endLine":84,"endColumn":8,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'ChatPage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["120"],["121"],["122"],["123"],"'OUTPUT_CHAT_MESSAGE' is defined but never used.","'DELETED_CHAT_MESSAGE' is defined but never used.","'Fab' is defined but never used.","'SendIcon' is defined but never used.","'primary' is assigned a value but never used.",["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"126","fix":"128"},{"desc":"126","fix":"129"},{"desc":"130","fix":"131"},{"desc":"126","fix":"132"},{"desc":"126","fix":"133"},"Update the dependencies array to be: [props]",{"range":"134","text":"135"},{"range":"136","text":"135"},{"range":"137","text":"135"},"Update the dependencies array to be: [props, props.user._id]",{"range":"138","text":"139"},{"range":"140","text":"135"},{"range":"141","text":"135"},[754,756],"[props]",[1722,1724],[1030,1032],[1953,1969],"[props, props.user._id]",[1716,1718],[2579,2581]]